version: "3.0"

services:
  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend
  backend:
    build: ./api
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SANIC_AUTORELOAD=${SANIC_AUTORELOAD}
      - SANIC_DEBUG=${SANIC_DEVELOPMENT}
    volumes:
      - ./api:/srv/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    # stdin_open: true
    tty: true
    networks:
      - backend
      - frontend
  frontend:
    build:
      context: ./client
      args:
        - NODE_ENV=${NODE_ENV}
        - EXPO_USERNAME=${EXPO_USERNAME}
        - EXPO_PASSWORD=${EXPO_PASSWORD}
        - REACT_NATIVE_PACKAGER_HOSTNAME=${LOCAL_IP}
    environment:
      - NODE_ENV=${NODE_ENV}
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=${LOCAL_IP}
    volumes:
      - ./client:/srv/app
    ports:
      - "3000:3000"
    networks:
      - frontend
    stdin_open: true
    tty: true

networks:
  backend:
  frontend:
